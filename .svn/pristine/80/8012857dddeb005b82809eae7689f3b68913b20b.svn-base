package user.command;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import mvc.command.CommandHandler;
import personnel.model.Personnel;
import personnel.service.PersonnelService;
import user.model.User;
import user.service.UserService;

public class UserHandler implements CommandHandler {
	private final static String MAIN_FORM = "WEB-INF/view/user.jsp";
	private UserService userService = new UserService();
	private User user = new User();
	private PersonnelService personalService = new PersonnelService();
	private Personnel personnel = new Personnel();

	@Override
	public String process(HttpServletRequest rq, HttpServletResponse rp) throws Exception {
		ArrayList<Personnel> personnelList = new ArrayList<Personnel>();
		personnelList = personalService.getAllPersonnel(personnelList);
		rq.setAttribute("personnelList", personnelList);

		if (rq.getMethod().equalsIgnoreCase("POST")) {
			return processSubmit(rq, rp);
		} else if (rq.getMethod().equalsIgnoreCase("GET")) {
			return processForm(rq, rp);
		} else {
			System.out.println("error : UserHandler.process()");
			return null;
		}
	}
	
	private String processForm(HttpServletRequest rq, HttpServletResponse rs) throws SQLException {
		if(rq.getParameter("choose") != null) {
			if(rq.getParameter("choose").equalsIgnoreCase("user"))
				rq.setAttribute("choose", Boolean.TRUE);
			else
				rq.setAttribute("choose", Boolean.FALSE);
		}
		
		if(rq.getParameter("no") != null) {
			int no = Integer.parseInt(rq.getParameter("no"));
			user = userService.getUser(user, no);
			if(rq.getParameter("modify") != null) {
				rq.setAttribute("modify", Boolean.TRUE);
			}
			rq.setAttribute("user", user);
		}
		
		return MAIN_FORM;
	}
	
	private String processSubmit(HttpServletRequest rq, HttpServletResponse rs) throws SQLException{
		if(rq.getParameter("choose") != null) {
			if(rq.getParameter("choose").equalsIgnoreCase("user"))
				rq.setAttribute("choose", Boolean.TRUE);
			else
				rq.setAttribute("choose", Boolean.FALSE);
		}
		
		Date school_out = null;
		if(rq.getParameter("school_out") != null)
			school_out = Datering(rq, rq.getParameter("school_out"));
		Date disabled_day = null;
		if(rq.getParameter("disabled_day") != null)
			disabled_day = Datering(rq, rq.getParameter("disabled_day"));
		Date license_day = null;
		if(rq.getParameter("license_day") != null)
			license_day = Datering(rq, rq.getParameter("license_day"));
		
//		ArrayList<License> 
		
		user = new User(Integer.parseInt(rq.getParameter("no")), rq.getParameter("filename"), rq.getParameter("filerealname"),
				rq.getParameter("name"), Integer.parseInt(rq.getParameter("reg_num")), rq.getParameter("phone"),
				rq.getParameter("addr"), rq.getParameter("email"), rq.getParameter("school_name"),
				rq.getParameter("school_major"), school_out,
				Integer.parseInt(rq.getParameter("tall")), Integer.parseInt(rq.getParameter("weight")),
				rq.getParameter("eye_l"), rq.getParameter("eye_r"), rq.getParameter("gender"),
				rq.getParameter("marry"), rq.getParameter("disabled"), 
				Integer.parseInt(rq.getParameter("disabled_grade")),
				disabled_day, rq.getParameter("license"), license_day				
				);
		user = userService.modifyUser(user);
		rq.setAttribute("user", user);
		return MAIN_FORM;
		
	}
	
	private Date Datering(HttpServletRequest rq, Object value) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Date dating = null;
		try {
			String param = (String) value;
			dating = new Date(sdf.parse(param).getTime());
		} catch(Exception e) {
			System.out.println("error : Datering");
			System.out.println(e.getMessage());
		}
		return dating;
	}

}
